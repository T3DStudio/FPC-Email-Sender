unit formsett;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls;

type

  { TSettForm }

  TSettForm = class(TForm)
    b_sv: TButton;
    b_rd: TButton;
    cb_ssl: TCheckBox;
    cb_tls: TCheckBox;
    e_host: TEdit;
    e_port: TEdit;
    e_sndr: TEdit;
    e_rcsv: TEdit;
    e_usr: TEdit;
    e_pswd: TEdit;
    l_host: TLabel;
    l_port: TLabel;
    l_usr: TLabel;
    l_rcvs: TLabel;
    l_sndr: TLabel;
    l_pswd: TLabel;
    procedure b_rdClick(Sender: TObject);
    procedure b_svClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var CloseAction: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);

  private
    { private declarations }
  public
    { public declarations }
   // procedure SetWXYWH(x,y,w,h:integer);
  end;

const b2pm : array[false..true] of char = ('-','+');
      cfgfn = 'settings.ini';

var
  SettForm: TSettForm;

  winx,winy,winw,winh: integer;


implementation

{$R *.lfm}

{ TSettForm }

function s2i (str:string):integer;var t:integer;begin val(str,s2i,t);end;

procedure cfg_setval(vr,vl:string);
var vlb:integer;
begin
   vlb:=s2i(vl);

   if (vr='sender'   )then settform.e_sndr.text := vl;
   if (vr='receiver' )then settform.e_rcsv.text := vl;
   if (vr='user'     )then settform.e_usr.text := vl;
   if (vr='pass'     )then settform.e_pswd.text := vl;
   if (vr='host'     )then settform.e_host.text := vl;
   if (vr='port'     )then settform.e_port.text := vl;
   if (vr='ssl'      )then settform.cb_ssl.Checked := vl=b2pm[true];
   if (vr='tls'      )then settform.cb_tls.Checked := vl=b2pm[true];
   if (vr='x'        )then winx := vlb;
   if (vr='y'        )then winy := vlb;
   if (vr='w'        )then winw := vlb;
   if (vr='h'        )then winh := vlb;
end;

procedure cfg_parse_str(s:string);
var vr,vl:string;
    i:byte;
begin
   vr:='';
   vl:='';
   i :=pos('=',s);
   vr:=copy(s,1,i-1);
   delete(s,1,i);
   vl:=s;
   cfg_setval(vr,vl);
end;

procedure cfg_read;
var f:text;
    s:string;
begin
   if FileExists(cfgfn) then
   begin
      assign(f,cfgfn);
      {$I-}reset(f);{$I+} if (ioresult<>0) then exit;
      while not eof(f) do
      begin
         readln(f,s);
         cfg_parse_str(s);
      end;
      close(f);
   end;
end;

procedure cfg_write;
var f:text;
begin
   assign(f,cfgfn);
   {$I-}rewrite(f);{$I+} if (ioresult<>0) then exit;

   writeln(f,'sender'   ,'=',settform.e_sndr.text);
   writeln(f,'receiver' ,'=',settform.e_rcsv.text);
   writeln(f,'user'     ,'=',settform.e_usr.text);
   writeln(f,'pass'     ,'=',settform.e_pswd.text);
   writeln(f,'host'     ,'=',settform.e_host.text);
   writeln(f,'port'     ,'=',settform.e_port.text);
   writeln(f,'ssl'      ,'=',b2pm[settform.cb_ssl.Checked]);
   writeln(f,'tls'      ,'=',b2pm[settform.cb_tls.Checked]);
   writeln(f,'x'        ,'=',winx);
   writeln(f,'y'        ,'=',winy);
   writeln(f,'w'        ,'=',winw);
   writeln(f,'h'        ,'=',winh);

   close(f);
end;


procedure TSettForm.FormClose(Sender: TObject; var CloseAction: TCloseAction);
begin
   SettForm.hide;
   CloseAction:=caNone;
end;

procedure TSettForm.b_svClick(Sender: TObject);
begin
   cfg_write;
   SettForm.hide;
end;

procedure TSettForm.b_rdClick(Sender: TObject);
begin
   cfg_read;
end;

procedure TSettForm.FormCreate(Sender: TObject);
begin
   winx:=-1;
   winy:=-1;
   winw:=320;
   winh:=233;

   SettForm.Position:=poScreenCenter;
   cfg_read;
end;

procedure TSettForm.FormDestroy(Sender: TObject);
begin
  cfg_write;
end;

procedure TSettForm.FormShow(Sender: TObject);
begin
   SettForm.Position:=poScreenCenter;
end;

end.

